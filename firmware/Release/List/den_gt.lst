
AVRASM ver. 2.1.30  D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm Tue May 28 02:42:00 2024

D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1088): warning: Register r4 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1089): warning: Register r5 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1090): warning: Register r7 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1091): warning: Register r6 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1092): warning: Register r9 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1093): warning: Register r8 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1094): warning: Register r11 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1095): warning: Register r10 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1096): warning: Register r13 already defined by the .DEF directive
D:\uet\2324_k2\vdk\traffic_light_atmega16\firmware\Release\List\den_gt.asm(1097): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Delay=R4
                 	.DEF _Delay_msb=R5
                 	.DEF _Xanh1=R7
                 	.DEF _Vang1=R6
                 	.DEF _Do1=R9
                 	.DEF _Xanh2=R8
                 	.DEF _Vang2=R11
                 	.DEF _Do2=R10
                 	.DEF _DemXanh1=R13
                 	.DEF _DemVang1=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003a 	JMP  __RESET
000002 940c 0088 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 00a4 	JMP  _timer0_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002a 001e
00002b 0f03      	.DB  0x1E,0x0,0x3,0xF
00002c 000a
00002d 0300      	.DB  0xA,0x0,0x0,0x3
                 
                 _0x8:
00002e f9c0
00002f b0a4
000030 9299
000031 f882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8
000032 9080      	.DB  0x80,0x90
                 
                 __GLOBAL_INI_TBL:
000033 0008      	.DW  0x08
000034 0004      	.DW  0x04
000035 0054      	.DW  __REG_VARS*2
                 
000036 000a      	.DW  0x0A
000037 0160      	.DW  _MaLed
000038 005c      	.DW  _0x8*2
                 
                 _0xFFFFFFFF:
000039 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003a 94f8      	CLI
00003b 27ee      	CLR  R30
00003c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003d e0f1      	LDI  R31,1
00003e bffb      	OUT  GICR,R31
00003f bfeb      	OUT  GICR,R30
000040 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000041 e08d      	LDI  R24,(14-2)+1
000042 e0a2      	LDI  R26,2
000043 27bb      	CLR  R27
                 __CLEAR_REG:
000044 93ed      	ST   X+,R30
000045 958a      	DEC  R24
000046 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000047 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000048 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000049 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004a 93ed      	ST   X+,R30
00004b 9701      	SBIW R24,1
00004c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004d e6e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004e e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00004f 9185      	LPM  R24,Z+
000050 9195      	LPM  R25,Z+
000051 9700      	SBIW R24,0
000052 f061      	BREQ __GLOBAL_INI_END
000053 91a5      	LPM  R26,Z+
000054 91b5      	LPM  R27,Z+
000055 9005      	LPM  R0,Z+
000056 9015      	LPM  R1,Z+
000057 01bf      	MOVW R22,R30
000058 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000059 9005      	LPM  R0,Z+
00005a 920d      	ST   X+,R0
00005b 9701      	SBIW R24,1
00005c f7e1      	BRNE __GLOBAL_INI_LOOP
00005d 01fb      	MOVW R30,R22
00005e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00005f e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000060 bfed      	OUT  SPL,R30
000061 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000062 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000063 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000064 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000065 940c 016e 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <Timer.h>
                 
                 	.CSEG
                 __KhoiTaoTimer0:
                 ; .FSTART __KhoiTaoTimer0
000067 e0e2      	LDI  R30,LOW(2)
000068 bfe3      	OUT  0x33,R30
000069 e3e8      	LDI  R30,LOW(56)
00006a bfe2      	OUT  0x32,R30
00006b e0e0      	LDI  R30,LOW(0)
00006c bfec      	OUT  0x3C,R30
00006d e0e1      	LDI  R30,LOW(1)
00006e bfe9      	OUT  0x39,R30
00006f 9478      	sei
000070 9508      	RET
                 ; .FEND
                 __NgatToanCuc:
                 ; .FSTART __NgatToanCuc
000071 93aa      	ST   -Y,R26
                 ;	TrangThai -> Y+0
000072 81e8      	LD   R30,Y
000073 e0f0      	LDI  R31,0
000074 9730      	SBIW R30,0
000075 f411      	BRNE _0x6
000076 94f8      	BCLR 7
000077 c005      	RJMP _0x5
                 _0x6:
000078 30e1      	CPI  R30,LOW(0x1)
000079 e0a0      	LDI  R26,HIGH(0x1)
00007a 07fa      	CPC  R31,R26
00007b f409      	BRNE _0x5
00007c 9478      	BSET 7
                 _0x5:
00007d c193      	RJMP _0x2000003
                 ; .FEND
                 ;#include <INT0.h>
                 __KhoiTaoNgatINT0:
                 ; .FSTART __KhoiTaoNgatINT0
00007e b7eb      	IN   R30,0x3B
00007f 64e0      	ORI  R30,0x40
000080 bfeb      	OUT  0x3B,R30
000081 e0e2      	LDI  R30,LOW(2)
000082 bfe5      	OUT  0x35,R30
000083 e0e0      	LDI  R30,LOW(0)
000084 bfe4      	OUT  0x34,R30
000085 e4e0      	LDI  R30,LOW(64)
000086 bfea      	OUT  0x3A,R30
000087 9508      	RET
                 ; .FEND
                 ;
                 ;#define DenXanh11   PORTA.0
                 ;#define DenXanh12   PORTA.6
                 ;#define DenVang11   PORTA.1
                 ;#define DenVang12   PORTA.7
                 ;#define DenDo11     PORTA.2
                 ;#define DenDo12     PORTB.0
                 ;
                 ;#define DenXanh21   PORTA.3
                 ;#define DenXanh22   PORTB.3
                 ;#define DenVang21   PORTA.4
                 ;#define DenVang22   PORTB.2
                 ;#define DenDo21     PORTA.5
                 ;#define DenDo22     PORTB.1
                 ;
                 ;#define MODE        PIND.2
                 ;
                 ;#define COT1        PORTB.4
                 ;#define COT2        PORTB.5
                 ;#define COT3        PORTB.6
                 ;#define COT4        PORTB.7
                 ;#define COT5        PORTD.0
                 ;#define COT6        PORTD.1
                 ;#define COT7        PORTD.3
                 ;#define COT8        PORTD.4
                 ;
                 ;unsigned int Delay = 30;
                 ;signed  char MaLed[]={0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90}; // Anode chung
                 
                 	.DSEG
                 ;//signed  char MaLed[]={0x3F, 0x06, 0x5B, 0X4F, 0x66, 0x6D, 0x7C, 0x07, 0x7F, 0x6F}; // Cathode chung
                 ;signed char Xanh1 =15,Vang1 =3,Do1;
                 ;signed char Xanh2 =10,Vang2 =3,Do2;
                 ;
                 ;signed char DemXanh1,DemVang1,DemDo1;
                 ;signed char DemXanh2,DemVang2,DemDo2;
                 ;signed char TenDuong=0;
                 ;char CheDo =0,Flag=0;
                 ;signed char CacSo[8];
                 ;unsigned int Dem=0;
                 ;
                 ;//-----------------------CHUONG TRINH CON-----------------------------
                 ;void _TachSo(signed char Dem, signed char *Chuc, signed char *DonVi);
                 ;void _QuetCot(char TenCot);
                 ;void _HienThiLed(signed char CacSo[]);
                 ;void _DenXanh11(void);
                 ;void _DenVang11(void);
                 ;void _DenDo11(void);
                 ;void _DenXanh21(void);
                 ;void _DenVang21(void);
                 ;void _DenDo21(void);
                 ;
                 ;//NGAT INT0
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0039 {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
000088 93aa      	ST   -Y,R26
000089 93ea      	ST   -Y,R30
00008a b7ef      	IN   R30,SREG
00008b 93ea      	ST   -Y,R30
                 ; 0000 003A   if(MODE == 0)
00008c 9982      	SBIC 0x10,2
00008d c011      	RJMP _0x9
                 ; 0000 003B   {
                 ; 0000 003C         while(MODE == 0);
                 _0xA:
00008e 9b82      	SBIS 0x10,2
00008f cffe      	RJMP _0xA
                 ; 0000 003D         CheDo = CheDo + 1;
000090 91e0 016f 	LDS  R30,_CheDo
000092 5fef      	SUBI R30,-LOW(1)
000093 93e0 016f 	STS  _CheDo,R30
                 ; 0000 003E         if(CheDo > 1)
000095 91a0 016f 	LDS  R26,_CheDo
000097 30a2      	CPI  R26,LOW(0x2)
000098 f018      	BRLO _0xD
                 ; 0000 003F         {
                 ; 0000 0040             CheDo = 0;
000099 e0e0      	LDI  R30,LOW(0)
00009a 93e0 016f 	STS  _CheDo,R30
                 ; 0000 0041         }
                 ; 0000 0042         Flag = 0;
                 _0xD:
00009c e0e0      	LDI  R30,LOW(0)
00009d 93e0 0170 	STS  _Flag,R30
                 ; 0000 0043   }
                 ; 0000 0044 }
                 _0x9:
00009f 91e9      	LD   R30,Y+
0000a0 bfef      	OUT  SREG,R30
0000a1 91e9      	LD   R30,Y+
0000a2 91a9      	LD   R26,Y+
0000a3 9518      	RETI
                 ; .FEND
                 ;
                 ;//NGAT TIMER0
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0048 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0000a4 920a      	ST   -Y,R0
0000a5 921a      	ST   -Y,R1
0000a6 92fa      	ST   -Y,R15
0000a7 936a      	ST   -Y,R22
0000a8 937a      	ST   -Y,R23
0000a9 938a      	ST   -Y,R24
0000aa 939a      	ST   -Y,R25
0000ab 93aa      	ST   -Y,R26
0000ac 93ba      	ST   -Y,R27
0000ad 93ea      	ST   -Y,R30
0000ae 93fa      	ST   -Y,R31
0000af b7ef      	IN   R30,SREG
0000b0 93ea      	ST   -Y,R30
                 ; 0000 0049 
                 ; 0000 004A    Dem++;
0000b1 e7a9      	LDI  R26,LOW(_Dem)
0000b2 e0b1      	LDI  R27,HIGH(_Dem)
0000b3 91ed      	LD   R30,X+
0000b4 91fd      	LD   R31,X+
0000b5 9631      	ADIW R30,1
0000b6 93fe      	ST   -X,R31
0000b7 93ee      	ST   -X,R30
                 ; 0000 004B    if(Dem>=5000)
0000b8 91a0 0179 	LDS  R26,_Dem
0000ba 91b0 017a 	LDS  R27,_Dem+1
0000bc 38a8      	CPI  R26,LOW(0x1388)
0000bd e1e3      	LDI  R30,HIGH(0x1388)
0000be 07be      	CPC  R27,R30
0000bf f408      	BRSH PC+2
0000c0 c09d      	RJMP _0xE
                 ; 0000 004C    {
                 ; 0000 004D      if(CheDo==0)
0000c1 91e0 016f 	LDS  R30,_CheDo
0000c3 30e0      	CPI  R30,0
0000c4 f009      	BREQ PC+2
0000c5 c093      	RJMP _0xF
                 ; 0000 004E      {
                 ; 0000 004F         if(Flag==0)
0000c6 91e0 0170 	LDS  R30,_Flag
0000c8 30e0      	CPI  R30,0
0000c9 f4d9      	BRNE _0x10
                 ; 0000 0050         {
                 ; 0000 0051            Do1 = Xanh2 + Vang2;
0000ca 2deb      	MOV  R30,R11
0000cb 0de8      	ADD  R30,R8
0000cc 2e9e      	MOV  R9,R30
                 ; 0000 0052            DemDo1 = Do1;
0000cd 9290 016a 	STS  _DemDo1,R9
                 ; 0000 0053            DemXanh2 = Xanh2+1;
0000cf 2de8      	MOV  R30,R8
0000d0 5fef      	SUBI R30,-LOW(1)
0000d1 93e0 016b 	STS  _DemXanh2,R30
                 ; 0000 0054            DemVang2 = Vang2+1;
0000d3 2deb      	MOV  R30,R11
0000d4 5fef      	SUBI R30,-LOW(1)
0000d5 93e0 016c 	STS  _DemVang2,R30
                 ; 0000 0055            Do2 = Xanh1 + Vang1;
0000d7 2de6      	MOV  R30,R6
0000d8 0de7      	ADD  R30,R7
0000d9 2eae      	MOV  R10,R30
                 ; 0000 0056            DemDo2 = Do2;
0000da 92a0 016d 	STS  _DemDo2,R10
                 ; 0000 0057            DemXanh1 = Xanh1+1;
0000dc 2de7      	MOV  R30,R7
0000dd 5fef      	SUBI R30,-LOW(1)
0000de 2ede      	MOV  R13,R30
                 ; 0000 0058            DemVang1 = Vang1+1;
0000df 2de6      	MOV  R30,R6
0000e0 5fef      	SUBI R30,-LOW(1)
0000e1 2ece      	MOV  R12,R30
                 ; 0000 0059            Flag =1;
0000e2 e0e1      	LDI  R30,LOW(1)
0000e3 93e0 0170 	STS  _Flag,R30
                 ; 0000 005A         }
                 ; 0000 005B         if(TenDuong==0)
                 _0x10:
0000e5 91e0 016e 	LDS  R30,_TenDuong
0000e7 30e0      	CPI  R30,0
0000e8 f5f1      	BRNE _0x11
                 ; 0000 005C         {
                 ; 0000 005D            _DenDo11();
0000e9 d16a      	RCALL __DenDo11
                 ; 0000 005E            if(DemDo1>=0)
0000ea 91a0 016a 	LDS  R26,_DemDo1
0000ec 30a0      	CPI  R26,0
0000ed f1c4      	BRLT _0x12
                 ; 0000 005F            {
                 ; 0000 0060               _TachSo(DemDo1,&CacSo[1],&CacSo[0]);
0000ee 91e0 016a 	LDS  R30,_DemDo1
0000f0 93ea      	ST   -Y,R30
0000f1 d17c      	RCALL SUBOPT_0x0
                 ; 0000 0061               _TachSo(DemDo1,&CacSo[5],&CacSo[4]);
0000f2 91e0 016a 	LDS  R30,_DemDo1
0000f4 93ea      	ST   -Y,R30
0000f5 d17f      	RCALL SUBOPT_0x1
                 ; 0000 0062              DemDo1--;
0000f6 91e0 016a 	LDS  R30,_DemDo1
0000f8 50e1      	SUBI R30,LOW(1)
0000f9 93e0 016a 	STS  _DemDo1,R30
                 ; 0000 0063              if(DemXanh2>=1)
0000fb 91a0 016b 	LDS  R26,_DemXanh2
0000fd 30a1      	CPI  R26,LOW(0x1)
0000fe f064      	BRLT _0x13
                 ; 0000 0064              {
                 ; 0000 0065                 DemXanh2--;
0000ff 91e0 016b 	LDS  R30,_DemXanh2
000101 50e1      	SUBI R30,LOW(1)
000102 93e0 016b 	STS  _DemXanh2,R30
                 ; 0000 0066                 _DenXanh21();
000104 d156      	RCALL __DenXanh21
                 ; 0000 0067                 _TachSo(DemXanh2,&CacSo[3],&CacSo[2]);
000105 91e0 016b 	LDS  R30,_DemXanh2
000107 d174      	RCALL SUBOPT_0x2
                 ; 0000 0068                 _TachSo(DemXanh2,&CacSo[7],&CacSo[6]);
000108 91e0 016b 	LDS  R30,_DemXanh2
00010a d179      	RCALL SUBOPT_0x3
                 ; 0000 0069              }
                 ; 0000 006A              if(DemXanh2==0)
                 _0x13:
00010b 91e0 016b 	LDS  R30,_DemXanh2
00010d 30e0      	CPI  R30,0
00010e f4b9      	BRNE _0x14
                 ; 0000 006B              {
                 ; 0000 006C                 if(DemVang2>=1)
00010f 91a0 016c 	LDS  R26,_DemVang2
000111 30a1      	CPI  R26,LOW(0x1)
000112 f09c      	BRLT _0x15
                 ; 0000 006D                 {
                 ; 0000 006E                     DemVang2--;
000113 91e0 016c 	LDS  R30,_DemVang2
000115 50e1      	SUBI R30,LOW(1)
000116 93e0 016c 	STS  _DemVang2,R30
                 ; 0000 006F                     _DenVang21();
000118 d147      	RCALL __DenVang21
                 ; 0000 0070                     if(DemVang2==0)
000119 91e0 016c 	LDS  R30,_DemVang2
00011b 30e0      	CPI  R30,0
00011c f419      	BRNE _0x16
                 ; 0000 0071                     {
                 ; 0000 0072                         TenDuong=1;
00011d e0e1      	LDI  R30,LOW(1)
00011e 93e0 016e 	STS  _TenDuong,R30
                 ; 0000 0073 
                 ; 0000 0074                     }
                 ; 0000 0075                     _TachSo(DemVang2,&CacSo[3],&CacSo[2]);
                 _0x16:
000120 91e0 016c 	LDS  R30,_DemVang2
000122 d159      	RCALL SUBOPT_0x2
                 ; 0000 0076                     _TachSo(DemVang2,&CacSo[7],&CacSo[6]);
000123 91e0 016c 	LDS  R30,_DemVang2
000125 d15e      	RCALL SUBOPT_0x3
                 ; 0000 0077                 }
                 ; 0000 0078              }
                 _0x15:
                 ; 0000 0079 
                 ; 0000 007A            }
                 _0x14:
                 ; 0000 007B             _HienThiLed(CacSo);
                 _0x12:
000126 c02f      	RJMP _0x155
                 ; 0000 007C         }
                 ; 0000 007D 
                 ; 0000 007E 
                 ; 0000 007F        else if(TenDuong==1)
                 _0x11:
000127 91a0 016e 	LDS  R26,_TenDuong
000129 30a1      	CPI  R26,LOW(0x1)
00012a f571      	BRNE _0x18
                 ; 0000 0080         {
                 ; 0000 0081            _DenDo21();
00012b d13b      	RCALL __DenDo21
                 ; 0000 0082            if(DemDo2>=0)
00012c 91a0 016d 	LDS  R26,_DemDo2
00012e 30a0      	CPI  R26,0
00012f f134      	BRLT _0x19
                 ; 0000 0083            {
                 ; 0000 0084              _TachSo(DemDo2,&CacSo[3],&CacSo[2]);
000130 91e0 016d 	LDS  R30,_DemDo2
000132 d149      	RCALL SUBOPT_0x2
                 ; 0000 0085              _TachSo(DemDo2,&CacSo[7],&CacSo[6]);
000133 91e0 016d 	LDS  R30,_DemDo2
000135 d14e      	RCALL SUBOPT_0x3
                 ; 0000 0086              DemDo2--;
000136 91e0 016d 	LDS  R30,_DemDo2
000138 50e1      	SUBI R30,LOW(1)
000139 93e0 016d 	STS  _DemDo2,R30
                 ; 0000 0087 
                 ; 0000 0088              if(DemXanh1>=1)
00013b e0e1      	LDI  R30,LOW(1)
00013c 16de      	CP   R13,R30
00013d f034      	BRLT _0x1A
                 ; 0000 0089              {
                 ; 0000 008A                 DemXanh1--;
00013e 94da      	DEC  R13
                 ; 0000 008B                 _DenXanh11();
00013f d108      	RCALL __DenXanh11
                 ; 0000 008C                 _TachSo(DemXanh1,&CacSo[1],&CacSo[0]);
000140 92da      	ST   -Y,R13
000141 d12c      	RCALL SUBOPT_0x0
                 ; 0000 008D                 _TachSo(DemXanh1,&CacSo[5],&CacSo[4]);
000142 92da      	ST   -Y,R13
000143 d131      	RCALL SUBOPT_0x1
                 ; 0000 008E              }
                 ; 0000 008F              if(DemXanh1==0)
                 _0x1A:
000144 20dd      	TST  R13
000145 f481      	BRNE _0x1B
                 ; 0000 0090              {
                 ; 0000 0091                 if(DemVang1>=1)
000146 e0e1      	LDI  R30,LOW(1)
000147 16ce      	CP   R12,R30
000148 f06c      	BRLT _0x1C
                 ; 0000 0092                 {
                 ; 0000 0093                     DemVang1--;
000149 94ca      	DEC  R12
                 ; 0000 0094                     _DenVang11();
00014a d102      	RCALL __DenVang11
                 ; 0000 0095                     if(DemVang1==0)
00014b 20cc      	TST  R12
00014c f429      	BRNE _0x1D
                 ; 0000 0096                     {
                 ; 0000 0097                         TenDuong=0;
00014d e0e0      	LDI  R30,LOW(0)
00014e 93e0 016e 	STS  _TenDuong,R30
                 ; 0000 0098                         Flag =0;
000150 93e0 0170 	STS  _Flag,R30
                 ; 0000 0099                     }
                 ; 0000 009A                     _TachSo(DemVang1,&CacSo[1],&CacSo[0]);
                 _0x1D:
000152 92ca      	ST   -Y,R12
000153 d11a      	RCALL SUBOPT_0x0
                 ; 0000 009B                     _TachSo(DemVang1,&CacSo[5],&CacSo[4]);
000154 92ca      	ST   -Y,R12
000155 d11f      	RCALL SUBOPT_0x1
                 ; 0000 009C                 }
                 ; 0000 009D              }
                 _0x1C:
                 ; 0000 009E            }
                 _0x1B:
                 ; 0000 009F            _HienThiLed(CacSo);
                 _0x19:
                 _0x155:
000156 e7a1      	LDI  R26,LOW(_CacSo)
000157 e0b1      	LDI  R27,HIGH(_CacSo)
000158 d0ba      	RCALL __HienThiLed
                 ; 0000 00A0         }
                 ; 0000 00A1      }
                 _0x18:
                 ; 0000 00A2      Dem=0;
                 _0xF:
000159 e0e0      	LDI  R30,LOW(0)
00015a 93e0 0179 	STS  _Dem,R30
00015c 93e0 017a 	STS  _Dem+1,R30
                 ; 0000 00A3    }
                 ; 0000 00A4 
                 ; 0000 00A5    TCNT0 =56;
                 _0xE:
00015e e3e8      	LDI  R30,LOW(56)
00015f bfe2      	OUT  0x32,R30
                 ; 0000 00A6 }
000160 91e9      	LD   R30,Y+
000161 bfef      	OUT  SREG,R30
000162 91f9      	LD   R31,Y+
000163 91e9      	LD   R30,Y+
000164 91b9      	LD   R27,Y+
000165 91a9      	LD   R26,Y+
000166 9199      	LD   R25,Y+
000167 9189      	LD   R24,Y+
000168 9179      	LD   R23,Y+
000169 9169      	LD   R22,Y+
00016a 90f9      	LD   R15,Y+
00016b 9019      	LD   R1,Y+
00016c 9009      	LD   R0,Y+
00016d 9518      	RETI
                 ; .FEND
                 ;
                 ;//--------------------------CHUONG TRINH CHINH--------------------------
                 ;void main(void)
                 ; 0000 00AA {
                 _main:
                 ; .FSTART _main
                 ; 0000 00AB     char i;
                 ; 0000 00AC     //signed char a[8];
                 ; 0000 00AD 
                 ; 0000 00AE     DDRA = 0xFF;
                 ;	i -> R17
00016e efef      	LDI  R30,LOW(255)
00016f bbea      	OUT  0x1A,R30
                 ; 0000 00AF     DDRB = 0xFF;
000170 bbe7      	OUT  0x17,R30
                 ; 0000 00B0     DDRC = 0xFF;
000171 bbe4      	OUT  0x14,R30
                 ; 0000 00B1     DDRD.0 = 1;
000172 9a88      	SBI  0x11,0
                 ; 0000 00B2     DDRD.1 = 1;
000173 9a89      	SBI  0x11,1
                 ; 0000 00B3     DDRD.3 = 1;
000174 9a8b      	SBI  0x11,3
                 ; 0000 00B4     DDRD.4 = 1;
000175 9a8c      	SBI  0x11,4
                 ; 0000 00B5 
                 ; 0000 00B6     DDRD.2 = 0;
000176 988a      	CBI  0x11,2
                 ; 0000 00B7     DDRD.5 = 0;
000177 988d      	CBI  0x11,5
                 ; 0000 00B8     DDRD.6 = 0;
000178 988e      	CBI  0x11,6
                 ; 0000 00B9 
                 ; 0000 00BA     PORTA = 0x00;
000179 e0e0      	LDI  R30,LOW(0)
00017a bbeb      	OUT  0x1B,R30
                 ; 0000 00BB     PORTC = 0xFF;
00017b efef      	LDI  R30,LOW(255)
00017c bbe5      	OUT  0x15,R30
                 ; 0000 00BC     PORTB.0 = 0;
00017d 98c0      	CBI  0x18,0
                 ; 0000 00BD     PORTB.1 = 0;
00017e 98c1      	CBI  0x18,1
                 ; 0000 00BE     PORTB.2 = 0;
00017f 98c2      	CBI  0x18,2
                 ; 0000 00BF     PORTB.3 = 0;
000180 98c3      	CBI  0x18,3
                 ; 0000 00C0 
                 ; 0000 00C1     PORTB.4 = 1;
000181 d10a      	RCALL SUBOPT_0x4
                 ; 0000 00C2     PORTB.5 = 1;
                 ; 0000 00C3     PORTB.6 = 1;
                 ; 0000 00C4     PORTB.7 = 1;
                 ; 0000 00C5     PORTD.0 = 1;
                 ; 0000 00C6     PORTD.1 = 1;
                 ; 0000 00C7     PORTD.3 = 1;
                 ; 0000 00C8     PORTD.4 = 1;
                 ; 0000 00C9 
                 ; 0000 00CA _KhoiTaoNgatINT0();
000182 defb      	RCALL __KhoiTaoNgatINT0
                 ; 0000 00CB _KhoiTaoTimer0();
000183 dee3      	RCALL __KhoiTaoTimer0
                 ; 0000 00CC _NgatToanCuc(1);
000184 e0a1      	LDI  R26,LOW(1)
000185 deeb      	RCALL __NgatToanCuc
                 ; 0000 00CD 
                 ; 0000 00CE while (1)
                 _0x44:
                 ; 0000 00CF       {
                 ; 0000 00D0          _HienThiLed(CacSo);
000186 e7a1      	LDI  R26,LOW(_CacSo)
000187 e0b1      	LDI  R27,HIGH(_CacSo)
000188 d08a      	RCALL __HienThiLed
                 ; 0000 00D1          while(CheDo==1)
                 _0x47:
000189 91a0 016f 	LDS  R26,_CheDo
00018b 30a1      	CPI  R26,LOW(0x1)
00018c f4c9      	BRNE _0x49
                 ; 0000 00D2          {
                 ; 0000 00D3                 DenXanh11 =0;
00018d 98d8      	CBI  0x1B,0
                 ; 0000 00D4                 DenXanh12 = 0;
00018e 98de      	CBI  0x1B,6
                 ; 0000 00D5                 DenDo11 = 0;
00018f 98da      	CBI  0x1B,2
                 ; 0000 00D6                 DenDo12 = 0;
000190 98c0      	CBI  0x18,0
                 ; 0000 00D7                 DenXanh21 = 0;
000191 98db      	CBI  0x1B,3
                 ; 0000 00D8                 DenXanh22 = 0;
000192 98c3      	CBI  0x18,3
                 ; 0000 00D9                 DenDo21 = 0;
000193 98dd      	CBI  0x1B,5
                 ; 0000 00DA                 DenDo22 = 0;
000194 98c1      	CBI  0x18,1
                 ; 0000 00DB 
                 ; 0000 00DC                 DenVang11 = 1;
000195 9ad9      	SBI  0x1B,1
                 ; 0000 00DD                 DenVang12 = 1;
000196 9adf      	SBI  0x1B,7
                 ; 0000 00DE                 DenVang21 = 1;
000197 9adc      	SBI  0x1B,4
                 ; 0000 00DF                 DenVang22 = 1;
000198 9ac2      	SBI  0x18,2
                 ; 0000 00E0                 delay_ms(1000);
000199 eea8      	LDI  R26,LOW(1000)
00019a e0b3      	LDI  R27,HIGH(1000)
00019b 940e 02a6 	CALL _delay_ms
                 ; 0000 00E1                 DenVang11 = 0;
00019d 98d9      	CBI  0x1B,1
                 ; 0000 00E2                 DenVang12 = 0;
00019e 98df      	CBI  0x1B,7
                 ; 0000 00E3                 DenVang21 = 0;
00019f 98dc      	CBI  0x1B,4
                 ; 0000 00E4                 DenVang22 = 0;
0001a0 98c2      	CBI  0x18,2
                 ; 0000 00E5                 delay_ms(1000);
0001a1 eea8      	LDI  R26,LOW(1000)
0001a2 e0b3      	LDI  R27,HIGH(1000)
0001a3 940e 02a6 	CALL _delay_ms
                 ; 0000 00E6          }
0001a5 cfe3      	RJMP _0x47
                 _0x49:
                 ; 0000 00E7       }
0001a6 cfdf      	RJMP _0x44
                 ; 0000 00E8 }
                 _0x6A:
0001a7 cfff      	RJMP _0x6A
                 ; .FEND
                 ;
                 ;//-------------------CHUONG TRINH CON-----------------------------
                 ;void _TachSo(signed char Dem, signed char *Chuc, signed char *DonVi)
                 ; 0000 00EC {
                 __TachSo:
                 ; .FSTART __TachSo
                 ; 0000 00ED     *Chuc = Dem/10;
0001a8 93ba      	ST   -Y,R27
0001a9 93aa      	ST   -Y,R26
                 ;	Dem -> Y+4
                 ;	*Chuc -> Y+2
                 ;	*DonVi -> Y+0
0001aa d0ea      	RCALL SUBOPT_0x5
0001ab 940e 02c7 	CALL __DIVW21
0001ad 81aa      	LDD  R26,Y+2
0001ae 81bb      	LDD  R27,Y+2+1
0001af 93ec      	ST   X,R30
                 ; 0000 00EE     *DonVi =Dem%10;
0001b0 d0e4      	RCALL SUBOPT_0x5
0001b1 940e 02cc 	CALL __MODW21
0001b3 81a8      	LD   R26,Y
0001b4 81b9      	LDD  R27,Y+1
0001b5 93ec      	ST   X,R30
                 ; 0000 00EF }
0001b6 9625      	ADIW R28,5
0001b7 9508      	RET
                 ; .FEND
                 ;
                 ;void _QuetCot(char TenCot)
                 ; 0000 00F2 {
                 __QuetCot:
                 ; .FSTART __QuetCot
                 ; 0000 00F3     switch(TenCot)
0001b8 93aa      	ST   -Y,R26
                 ;	TenCot -> Y+0
0001b9 81e8      	LD   R30,Y
0001ba e0f0      	LDI  R31,0
                 ; 0000 00F4     {
                 ; 0000 00F5         case 0:
0001bb 9730      	SBIW R30,0
0001bc f411      	BRNE _0x6E
                 ; 0000 00F6         {
                 ; 0000 00F7             COT1 =1;
0001bd d0ce      	RCALL SUBOPT_0x4
                 ; 0000 00F8             COT2 =1;
                 ; 0000 00F9             COT3 =1;
                 ; 0000 00FA             COT4 =1;
                 ; 0000 00FB             COT5 =1;
                 ; 0000 00FC             COT6 =1;
                 ; 0000 00FD             COT7 =1;
                 ; 0000 00FE             COT8 =1;
                 ; 0000 00FF             break;
0001be c052      	RJMP _0x6D
                 ; 0000 0100         }
                 ; 0000 0101          case 1:
                 _0x6E:
0001bf 30e1      	CPI  R30,LOW(0x1)
0001c0 e0a0      	LDI  R26,HIGH(0x1)
0001c1 07fa      	CPC  R31,R26
0001c2 f431      	BRNE _0x7F
                 ; 0000 0102         {
                 ; 0000 0103             COT1 =0;
0001c3 98c4      	CBI  0x18,4
                 ; 0000 0104             COT2 =1;
0001c4 d0d7      	RCALL SUBOPT_0x6
                 ; 0000 0105             COT3 =1;
                 ; 0000 0106             COT4 =1;
                 ; 0000 0107             COT5 =1;
                 ; 0000 0108             COT6 =1;
0001c5 9a91      	SBI  0x12,1
                 ; 0000 0109             COT7 =1;
0001c6 9a93      	SBI  0x12,3
                 ; 0000 010A             COT8 =1;
0001c7 9a94      	SBI  0x12,4
                 ; 0000 010B             break;
0001c8 c048      	RJMP _0x6D
                 ; 0000 010C         }
                 ; 0000 010D          case 2:
                 _0x7F:
0001c9 30e2      	CPI  R30,LOW(0x2)
0001ca e0a0      	LDI  R26,HIGH(0x2)
0001cb 07fa      	CPC  R31,R26
0001cc f431      	BRNE _0x90
                 ; 0000 010E         {
                 ; 0000 010F             COT1 =1;
0001cd 9ac4      	SBI  0x18,4
                 ; 0000 0110             COT2 =0;
0001ce 98c5      	CBI  0x18,5
                 ; 0000 0111             COT3 =1;
0001cf 9ac6      	SBI  0x18,6
                 ; 0000 0112             COT4 =1;
0001d0 9ac7      	SBI  0x18,7
                 ; 0000 0113             COT5 =1;
0001d1 d0cf      	RCALL SUBOPT_0x7
                 ; 0000 0114             COT6 =1;
                 ; 0000 0115             COT7 =1;
                 ; 0000 0116             COT8 =1;
                 ; 0000 0117             break;
0001d2 c03e      	RJMP _0x6D
                 ; 0000 0118         }
                 ; 0000 0119          case 3:
                 _0x90:
0001d3 30e3      	CPI  R30,LOW(0x3)
0001d4 e0a0      	LDI  R26,HIGH(0x3)
0001d5 07fa      	CPC  R31,R26
0001d6 f431      	BRNE _0xA1
                 ; 0000 011A         {
                 ; 0000 011B             COT1 =1;
0001d7 9ac4      	SBI  0x18,4
                 ; 0000 011C             COT2 =1;
0001d8 9ac5      	SBI  0x18,5
                 ; 0000 011D             COT3 =0;
0001d9 98c6      	CBI  0x18,6
                 ; 0000 011E             COT4 =1;
0001da 9ac7      	SBI  0x18,7
                 ; 0000 011F             COT5 =1;
0001db d0c5      	RCALL SUBOPT_0x7
                 ; 0000 0120             COT6 =1;
                 ; 0000 0121             COT7 =1;
                 ; 0000 0122             COT8 =1;
                 ; 0000 0123             break;
0001dc c034      	RJMP _0x6D
                 ; 0000 0124         }
                 ; 0000 0125          case 4:
                 _0xA1:
0001dd 30e4      	CPI  R30,LOW(0x4)
0001de e0a0      	LDI  R26,HIGH(0x4)
0001df 07fa      	CPC  R31,R26
0001e0 f431      	BRNE _0xB2
                 ; 0000 0126         {
                 ; 0000 0127             COT1 =1;
0001e1 9ac4      	SBI  0x18,4
                 ; 0000 0128             COT2 =1;
0001e2 9ac5      	SBI  0x18,5
                 ; 0000 0129             COT3 =1;
0001e3 9ac6      	SBI  0x18,6
                 ; 0000 012A             COT4 =0;
0001e4 98c7      	CBI  0x18,7
                 ; 0000 012B             COT5 =1;
0001e5 d0bb      	RCALL SUBOPT_0x7
                 ; 0000 012C             COT6 =1;
                 ; 0000 012D             COT7 =1;
                 ; 0000 012E             COT8 =1;
                 ; 0000 012F             break;
0001e6 c02a      	RJMP _0x6D
                 ; 0000 0130         }
                 ; 0000 0131          case 5:
                 _0xB2:
0001e7 30e5      	CPI  R30,LOW(0x5)
0001e8 e0a0      	LDI  R26,HIGH(0x5)
0001e9 07fa      	CPC  R31,R26
0001ea f449      	BRNE _0xC3
                 ; 0000 0132         {
                 ; 0000 0133             COT1 =1;
0001eb 9ac4      	SBI  0x18,4
                 ; 0000 0134             COT2 =1;
0001ec 9ac5      	SBI  0x18,5
                 ; 0000 0135             COT3 =1;
0001ed 9ac6      	SBI  0x18,6
                 ; 0000 0136             COT4 =1;
0001ee 9ac7      	SBI  0x18,7
                 ; 0000 0137             COT5 =0;
0001ef 9890      	CBI  0x12,0
                 ; 0000 0138             COT6 =1;
0001f0 9a91      	SBI  0x12,1
                 ; 0000 0139             COT7 =1;
0001f1 9a93      	SBI  0x12,3
                 ; 0000 013A             COT8 =1;
0001f2 9a94      	SBI  0x12,4
                 ; 0000 013B             break;
0001f3 c01d      	RJMP _0x6D
                 ; 0000 013C         }
                 ; 0000 013D          case 6:
                 _0xC3:
0001f4 30e6      	CPI  R30,LOW(0x6)
0001f5 e0a0      	LDI  R26,HIGH(0x6)
0001f6 07fa      	CPC  R31,R26
0001f7 f431      	BRNE _0xD4
                 ; 0000 013E         {
                 ; 0000 013F             COT1 =1;
0001f8 9ac4      	SBI  0x18,4
                 ; 0000 0140             COT2 =1;
0001f9 d0a2      	RCALL SUBOPT_0x6
                 ; 0000 0141             COT3 =1;
                 ; 0000 0142             COT4 =1;
                 ; 0000 0143             COT5 =1;
                 ; 0000 0144             COT6 =0;
0001fa 9891      	CBI  0x12,1
                 ; 0000 0145             COT7 =1;
0001fb 9a93      	SBI  0x12,3
                 ; 0000 0146             COT8 =1;
0001fc 9a94      	SBI  0x12,4
                 ; 0000 0147             break;
0001fd c013      	RJMP _0x6D
                 ; 0000 0148         }
                 ; 0000 0149          case 7:
                 _0xD4:
0001fe 30e7      	CPI  R30,LOW(0x7)
0001ff e0a0      	LDI  R26,HIGH(0x7)
000200 07fa      	CPC  R31,R26
000201 f431      	BRNE _0xE5
                 ; 0000 014A         {
                 ; 0000 014B             COT1 =1;
000202 9ac4      	SBI  0x18,4
                 ; 0000 014C             COT2 =1;
000203 d098      	RCALL SUBOPT_0x6
                 ; 0000 014D             COT3 =1;
                 ; 0000 014E             COT4 =1;
                 ; 0000 014F             COT5 =1;
                 ; 0000 0150             COT6 =1;
000204 9a91      	SBI  0x12,1
                 ; 0000 0151             COT7 =0;
000205 9893      	CBI  0x12,3
                 ; 0000 0152             COT8 =1;
000206 9a94      	SBI  0x12,4
                 ; 0000 0153             break;
000207 c009      	RJMP _0x6D
                 ; 0000 0154         }
                 ; 0000 0155          case 8:
                 _0xE5:
000208 30e8      	CPI  R30,LOW(0x8)
000209 e0a0      	LDI  R26,HIGH(0x8)
00020a 07fa      	CPC  R31,R26
00020b f429      	BRNE _0x6D
                 ; 0000 0156         {
                 ; 0000 0157             COT1 =1;
00020c 9ac4      	SBI  0x18,4
                 ; 0000 0158             COT2 =1;
00020d d08e      	RCALL SUBOPT_0x6
                 ; 0000 0159             COT3 =1;
                 ; 0000 015A             COT4 =1;
                 ; 0000 015B             COT5 =1;
                 ; 0000 015C             COT6 =1;
00020e 9a91      	SBI  0x12,1
                 ; 0000 015D             COT7 =1;
00020f 9a93      	SBI  0x12,3
                 ; 0000 015E             COT8 =0;
000210 9894      	CBI  0x12,4
                 ; 0000 015F             break;
                 ; 0000 0160         }
                 ; 0000 0161     }
                 _0x6D:
                 ; 0000 0162 }
                 _0x2000003:
000211 9621      	ADIW R28,1
000212 9508      	RET
                 ; .FEND
                 ;
                 ;void _HienThiLed(signed char CacSo[])
                 ; 0000 0165 {
                 __HienThiLed:
                 ; .FSTART __HienThiLed
                 ; 0000 0166     signed char a[8];
                 ; 0000 0167     char i;
                 ; 0000 0168 
                 ; 0000 0169     for(i=0;i<=7;i++)
000213 93ba      	ST   -Y,R27
000214 93aa      	ST   -Y,R26
000215 9728      	SBIW R28,8
000216 931a      	ST   -Y,R17
                 ;	CacSo -> Y+9
                 ;	a -> Y+1
                 ;	i -> R17
000217 e010      	LDI  R17,LOW(0)
                 _0x108:
000218 3018      	CPI  R17,8
000219 f4a8      	BRSH _0x109
                 ; 0000 016A     {
                 ; 0000 016B         a[i] =MaLed[CacSo[i]];
00021a 2fe1      	MOV  R30,R17
00021b e0f0      	LDI  R31,0
00021c 01de      	MOVW R26,R28
00021d 9611      	ADIW R26,1
00021e 0fea      	ADD  R30,R26
00021f 1ffb      	ADC  R31,R27
000220 010f      	MOVW R0,R30
000221 85a9      	LDD  R26,Y+9
000222 85ba      	LDD  R27,Y+9+1
000223 27ee      	CLR  R30
000224 0fa1      	ADD  R26,R17
000225 1fbe      	ADC  R27,R30
000226 91ec      	LD   R30,X
000227 e0f0      	LDI  R31,0
000228 5ae0      	SUBI R30,LOW(-_MaLed)
000229 4ffe      	SBCI R31,HIGH(-_MaLed)
00022a 81e0      	LD   R30,Z
00022b 01d0      	MOVW R26,R0
00022c 93ec      	ST   X,R30
                 ; 0000 016C     }
00022d 5f1f      	SUBI R17,-1
00022e cfe9      	RJMP _0x108
                 _0x109:
                 ; 0000 016D 
                 ; 0000 016E     for(i=0;i<=7;i++)
00022f e010      	LDI  R17,LOW(0)
                 _0x10B:
000230 3018      	CPI  R17,8
000231 f498      	BRSH _0x10C
                 ; 0000 016F     {
                 ; 0000 0170         PORTC =a[i];
000232 2fe1      	MOV  R30,R17
000233 e0f0      	LDI  R31,0
000234 01de      	MOVW R26,R28
000235 9611      	ADIW R26,1
000236 0fae      	ADD  R26,R30
000237 1fbf      	ADC  R27,R31
000238 91ec      	LD   R30,X
000239 bbe5      	OUT  0x15,R30
                 ; 0000 0171         _QuetCot(i+1);
00023a 2fa1      	MOV  R26,R17
00023b 5faf      	SUBI R26,-LOW(1)
00023c df7b      	RCALL __QuetCot
                 ; 0000 0172         delay_ms(1);
00023d e0a1      	LDI  R26,LOW(1)
00023e e0b0      	LDI  R27,0
00023f 940e 02a6 	CALL _delay_ms
                 ; 0000 0173         _QuetCot(0);
000241 e0a0      	LDI  R26,LOW(0)
000242 df75      	RCALL __QuetCot
                 ; 0000 0174     }
000243 5f1f      	SUBI R17,-1
000244 cfeb      	RJMP _0x10B
                 _0x10C:
                 ; 0000 0175 }
000245 8118      	LDD  R17,Y+0
000246 962b      	ADIW R28,11
000247 9508      	RET
                 ; .FEND
                 ;
                 ;void _DenXanh11(void)
                 ; 0000 0178 {
                 __DenXanh11:
                 ; .FSTART __DenXanh11
                 ; 0000 0179    DenXanh11 =1;
000248 9ad8      	SBI  0x1B,0
                 ; 0000 017A    DenXanh12 =1;
000249 9ade      	SBI  0x1B,6
                 ; 0000 017B    DenVang11 =0;
00024a 98d9      	CBI  0x1B,1
                 ; 0000 017C    DenVang12 =0;
00024b 98df      	CBI  0x1B,7
                 ; 0000 017D    DenDo11 =0;
00024c c004      	RJMP _0x2000002
                 ; 0000 017E    DenDo12 =0;
                 ; 0000 017F }
                 ; .FEND
                 ;void _DenVang11(void)
                 ; 0000 0181 {
                 __DenVang11:
                 ; .FSTART __DenVang11
                 ; 0000 0182    DenXanh11 =0;
00024d 98d8      	CBI  0x1B,0
                 ; 0000 0183    DenXanh12 =0;
00024e 98de      	CBI  0x1B,6
                 ; 0000 0184    DenVang11 =1;
00024f 9ad9      	SBI  0x1B,1
                 ; 0000 0185    DenVang12 =1;
000250 9adf      	SBI  0x1B,7
                 ; 0000 0186    DenDo11 =0;
                 _0x2000002:
000251 98da      	CBI  0x1B,2
                 ; 0000 0187    DenDo12 =0;
000252 98c0      	CBI  0x18,0
                 ; 0000 0188 }
000253 9508      	RET
                 ; .FEND
                 ;void _DenDo11(void)
                 ; 0000 018A {
                 __DenDo11:
                 ; .FSTART __DenDo11
                 ; 0000 018B    DenXanh11 =0;
000254 98d8      	CBI  0x1B,0
                 ; 0000 018C    DenXanh12 =0;
000255 98de      	CBI  0x1B,6
                 ; 0000 018D    DenVang11 =0;
000256 98d9      	CBI  0x1B,1
                 ; 0000 018E    DenVang12 =0;
000257 98df      	CBI  0x1B,7
                 ; 0000 018F    DenDo11 =1;
000258 9ada      	SBI  0x1B,2
                 ; 0000 0190    DenDo12 =1;
000259 9ac0      	SBI  0x18,0
                 ; 0000 0191 }
00025a 9508      	RET
                 ; .FEND
                 ;void _DenXanh21(void)
                 ; 0000 0193 {
                 __DenXanh21:
                 ; .FSTART __DenXanh21
                 ; 0000 0194     DenXanh21 =1;
00025b 9adb      	SBI  0x1B,3
                 ; 0000 0195     DenXanh22 =1;
00025c 9ac3      	SBI  0x18,3
                 ; 0000 0196     DenVang21 =0;
00025d 98dc      	CBI  0x1B,4
                 ; 0000 0197     DenVang22 =0;
00025e 98c2      	CBI  0x18,2
                 ; 0000 0198     DenDo21 =0;
00025f c004      	RJMP _0x2000001
                 ; 0000 0199     DenDo22 =0;
                 ; 0000 019A }
                 ; .FEND
                 ;void _DenVang21(void)
                 ; 0000 019C {
                 __DenVang21:
                 ; .FSTART __DenVang21
                 ; 0000 019D     DenXanh21 =0;
000260 98db      	CBI  0x1B,3
                 ; 0000 019E     DenXanh22 =0;
000261 98c3      	CBI  0x18,3
                 ; 0000 019F     DenVang21 =1;
000262 9adc      	SBI  0x1B,4
                 ; 0000 01A0     DenVang22 =1;
000263 9ac2      	SBI  0x18,2
                 ; 0000 01A1     DenDo21 =0;
                 _0x2000001:
000264 98dd      	CBI  0x1B,5
                 ; 0000 01A2     DenDo22 =0;
000265 98c1      	CBI  0x18,1
                 ; 0000 01A3 }
000266 9508      	RET
                 ; .FEND
                 ;void _DenDo21(void)
                 ; 0000 01A5 {
                 __DenDo21:
                 ; .FSTART __DenDo21
                 ; 0000 01A6     DenXanh21 =0;
000267 98db      	CBI  0x1B,3
                 ; 0000 01A7     DenXanh22 =0;
000268 98c3      	CBI  0x18,3
                 ; 0000 01A8     DenVang21 =0;
000269 98dc      	CBI  0x1B,4
                 ; 0000 01A9     DenVang22 =0;
00026a 98c2      	CBI  0x18,2
                 ; 0000 01AA     DenDo21 =1;
00026b 9add      	SBI  0x1B,5
                 ; 0000 01AB     DenDo22 =1;
00026c 9ac1      	SBI  0x18,1
                 ; 0000 01AC }
00026d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _MaLed:
000160           	.BYTE 0xA
                 _DemDo1:
00016a           	.BYTE 0x1
                 _DemXanh2:
00016b           	.BYTE 0x1
                 _DemVang2:
00016c           	.BYTE 0x1
                 _DemDo2:
00016d           	.BYTE 0x1
                 _TenDuong:
00016e           	.BYTE 0x1
                 _CheDo:
00016f           	.BYTE 0x1
                 _Flag:
000170           	.BYTE 0x1
                 _CacSo:
000171           	.BYTE 0x8
                 _Dem:
000179           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
                +
00026e e7e2     +LDI R30 , LOW ( _CacSo + ( 1 ) )
00026f e0f1     +LDI R31 , HIGH ( _CacSo + ( 1 ) )
                 	__POINTW1MN _CacSo,1
000270 93fa      	ST   -Y,R31
000271 93ea      	ST   -Y,R30
000272 e7a1      	LDI  R26,LOW(_CacSo)
000273 e0b1      	LDI  R27,HIGH(_CacSo)
000274 cf33      	RJMP __TachSo
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
                +
000275 e7e6     +LDI R30 , LOW ( _CacSo + ( 5 ) )
000276 e0f1     +LDI R31 , HIGH ( _CacSo + ( 5 ) )
                 	__POINTW1MN _CacSo,5
000277 93fa      	ST   -Y,R31
000278 93ea      	ST   -Y,R30
                +
000279 e7a5     +LDI R26 , LOW ( _CacSo + ( 4 ) )
00027a e0b1     +LDI R27 , HIGH ( _CacSo + ( 4 ) )
                 	__POINTW2MN _CacSo,4
00027b cf2c      	RJMP __TachSo
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2:
00027c 93ea      	ST   -Y,R30
                +
00027d e7e4     +LDI R30 , LOW ( _CacSo + ( 3 ) )
00027e e0f1     +LDI R31 , HIGH ( _CacSo + ( 3 ) )
                 	__POINTW1MN _CacSo,3
00027f 93fa      	ST   -Y,R31
000280 93ea      	ST   -Y,R30
                +
000281 e7a3     +LDI R26 , LOW ( _CacSo + ( 2 ) )
000282 e0b1     +LDI R27 , HIGH ( _CacSo + ( 2 ) )
                 	__POINTW2MN _CacSo,2
000283 cf24      	RJMP __TachSo
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x3:
000284 93ea      	ST   -Y,R30
                +
000285 e7e8     +LDI R30 , LOW ( _CacSo + ( 7 ) )
000286 e0f1     +LDI R31 , HIGH ( _CacSo + ( 7 ) )
                 	__POINTW1MN _CacSo,7
000287 93fa      	ST   -Y,R31
000288 93ea      	ST   -Y,R30
                +
000289 e7a7     +LDI R26 , LOW ( _CacSo + ( 6 ) )
00028a e0b1     +LDI R27 , HIGH ( _CacSo + ( 6 ) )
                 	__POINTW2MN _CacSo,6
00028b cf1c      	RJMP __TachSo
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00028c 9ac4      	SBI  0x18,4
00028d 9ac5      	SBI  0x18,5
00028e 9ac6      	SBI  0x18,6
00028f 9ac7      	SBI  0x18,7
000290 9a90      	SBI  0x12,0
000291 9a91      	SBI  0x12,1
000292 9a93      	SBI  0x12,3
000293 9a94      	SBI  0x12,4
000294 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000295 81ac      	LDD  R26,Y+4
000296 e0b0      	LDI  R27,0
000297 fda7      	SBRC R26,7
000298 efbf      	SER  R27
000299 e0ea      	LDI  R30,LOW(10)
00029a e0f0      	LDI  R31,HIGH(10)
00029b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00029c 9ac5      	SBI  0x18,5
00029d 9ac6      	SBI  0x18,6
00029e 9ac7      	SBI  0x18,7
00029f 9a90      	SBI  0x12,0
0002a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0002a1 9a90      	SBI  0x12,0
0002a2 9a91      	SBI  0x12,1
0002a3 9a93      	SBI  0x12,3
0002a4 9a94      	SBI  0x12,4
0002a5 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0002a6 9610      	adiw r26,0
0002a7 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0002a8 ed80     +LDI R24 , LOW ( 0x7D0 )
0002a9 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002aa 9701     +SBIW R24 , 1
0002ab f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0002ac 95a8      	wdr
0002ad 9711      	sbiw r26,1
0002ae f7c9      	brne __delay_ms0
                 __delay_ms1:
0002af 9508      	ret
                 
                 __ANEGW1:
0002b0 95f1      	NEG  R31
0002b1 95e1      	NEG  R30
0002b2 40f0      	SBCI R31,0
0002b3 9508      	RET
                 
                 __DIVW21U:
0002b4 2400      	CLR  R0
0002b5 2411      	CLR  R1
0002b6 e190      	LDI  R25,16
                 __DIVW21U1:
0002b7 0faa      	LSL  R26
0002b8 1fbb      	ROL  R27
0002b9 1c00      	ROL  R0
0002ba 1c11      	ROL  R1
0002bb 1a0e      	SUB  R0,R30
0002bc 0a1f      	SBC  R1,R31
0002bd f418      	BRCC __DIVW21U2
0002be 0e0e      	ADD  R0,R30
0002bf 1e1f      	ADC  R1,R31
0002c0 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0002c1 60a1      	SBR  R26,1
                 __DIVW21U3:
0002c2 959a      	DEC  R25
0002c3 f799      	BRNE __DIVW21U1
0002c4 01fd      	MOVW R30,R26
0002c5 01d0      	MOVW R26,R0
0002c6 9508      	RET
                 
                 __DIVW21:
0002c7 d012      	RCALL __CHKSIGNW
0002c8 dfeb      	RCALL __DIVW21U
0002c9 f40e      	BRTC __DIVW211
0002ca dfe5      	RCALL __ANEGW1
                 __DIVW211:
0002cb 9508      	RET
                 
                 __MODW21:
0002cc 94e8      	CLT
0002cd ffb7      	SBRS R27,7
0002ce c004      	RJMP __MODW211
0002cf 95a0      	COM  R26
0002d0 95b0      	COM  R27
0002d1 9611      	ADIW R26,1
0002d2 9468      	SET
                 __MODW211:
0002d3 fdf7      	SBRC R31,7
0002d4 dfdb      	RCALL __ANEGW1
0002d5 dfde      	RCALL __DIVW21U
0002d6 01fd      	MOVW R30,R26
0002d7 f40e      	BRTC __MODW212
0002d8 dfd7      	RCALL __ANEGW1
                 __MODW212:
0002d9 9508      	RET
                 
                 __CHKSIGNW:
0002da 94e8      	CLT
0002db fff7      	SBRS R31,7
0002dc c002      	RJMP __CHKSW1
0002dd dfd2      	RCALL __ANEGW1
0002de 9468      	SET
                 __CHKSW1:
0002df ffb7      	SBRS R27,7
0002e0 c006      	RJMP __CHKSW2
0002e1 95a0      	COM  R26
0002e2 95b0      	COM  R27
0002e3 9611      	ADIW R26,1
0002e4 f800      	BLD  R0,0
0002e5 9403      	INC  R0
0002e6 fa00      	BST  R0,0
                 __CHKSW2:
0002e7 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :  16 r1 :   7 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   2 r7 :   2 
r8 :   2 r9 :   2 r10:   2 r11:   2 r12:   6 r13:   6 r14:   0 r15:   2 
r16:   0 r17:  12 r18:   0 r19:   0 r20:   0 r21:   0 r22:   4 r23:   2 
r24:  11 r25:   7 r26:  83 r27:  31 r28:   7 r29:   1 r30: 173 r31:  39 
x  :  12 y  :  63 z  :   8 
Registers used: 25 out of 35 (71.4%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   4 add   :   6 
adiw  :   9 and   :   0 andi  :   0 asr   :   0 bclr  :   1 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   3 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   6 brmi  :   0 brne  :  25 brpl  :   0 brsh  :   3 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   1 bst   :   1 call  :   5 
cbi   :  47 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   5 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :   2 cpc   :  10 cpi   :  24 cpse  :   0 dec   :   4 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   3 inc   :   1 jmp   :  22 ld    :  23 ldd   :   7 ldi   :  84 
lds   :  27 lpm   :   7 lsl   :   1 lsr   :   0 mov   :  13 movw  :  10 
mul   :   0 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   1 out   :  23 pop   :   0 push  :   0 rcall :  43 ret   :  19 
reti  :   2 rjmp  :  31 rol   :   3 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :  64 sbic  :   1 sbis  :   1 sbiw  :   8 sbr   :   1 sbrc  :   2 
sbrs  :   3 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   1 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  46 std   :   0 sts   :  17 sub   :   1 subi  :  13 swap  :   0 
tst   :   2 wdr   :   1 
Instructions used: 61 out of 116 (52.6%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005d0   1456     32   1488   16384   9.1%
[.dseg] 0x000060 0x00017b      0     27     27    1024   2.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
